test <- auc.mypaper(traindata = model1.s$data, method="lasso", x=model1.s, testdata = dataset)
library(glmnet)
test <- auc.mypaper(traindata = model1.s$data, method="lasso", x=model1.s, testdata = dataset)
test
test <- auc.mypaper(traindata = model1.s$data, method="glm", x=model1.s, testdata = datahigh)
test
calilow <- auc.mypaper(traindata = model1.s$data, method="glm", x=model1.s, testdata = datalow)
calihigh <- auc.mypaper(traindata = model1.s$data, method="glm", x=model1.s, testdata = datahigh)
calimed <- auc.mypaper(traindata = model1.s$data, method="glm", x=model1.s, testdata = datamed)
cali <- rbind(calilow, calimed, calihigh)
cali
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method="glm")
predcut <- cut2(pred3$Predicted, c(0.1, 0.5))
table(predcut)
data0 <- dataset
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method="glm")
predcut <- cut2(pred3$Predicted, c(0.1, 0.5))
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut=="[0.0177,0.1000)" )
datamed <- data0%>%filter(predcut=="[0.1000,0.5000)")
datahigh <- data0%>%filter(predcut=="[0.5000,0.9803]")
calimed <- auc.mypaper(traindata = model3.s$data, method="glm", x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method="glm", x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method="glm", x=model3.s, testdata = datalow)
calimed <- auc.mypaper(traindata = model3.s$data, method="glm", x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method="glm", x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method="glm", x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
names(predcut)
name(predcut)
predcut
levels(predcut)
levels(predcut)[1]
meth="glm"
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, c(0.1, 0.5))
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="lasso"
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, c(0.1, 0.5))
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="svm"
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, c(0.1, 0.5))
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
table(predcut)
meth="randomforest"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="knn"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="glm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="glm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh) pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
pred3 <- predict.mypaper(x=model3.s, traindata=model3.s$data, method=meth)
View(model3.s)
meth
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="glm")
### require or.prev
predict.mypaper <- function(x,traindata=NULL,testdata= NULL, method=c("glm","svm","lasso","randomforest", "knn"), kernal="linear", OOB=T,k=25,logit=F, ...){
corrected.c <- NULL
calibration.auc <- NULL
predicted_pro_2 <- NULL
model.data <-x$model$GLM
model.formula <- model.data$formula
if(method=="lasso" ){
dep_var_level2 <- levels(x$data[,x$dep_var])[[2]]
dep_var_0or1 <-  ifelse(traindata[,x$dep_var] == dep_var_level2,1,0 )
ind_var_str <- paste(c(as.character(x$ind_var)), collapse = "+ ")
fmla <- as.formula( paste( x$dep_var,"~", ind_var_str))
}
if(is.null(traindata)){
if(method=="glm"){model <- x$model$GLM}
if(method=="svm"){model <- x$model$SVM}
if(method=="randomforest"){model <- x$model$RF}
if(method=="lasso"){model <- x$model$lasso.glm
mod.matrix <-  x$model$model.matrix
}
if(method=="knn"){model <- x$model$KNN}
}else{
if(method=="glm"){ model <- glm(model.formula, data = traindata, family = binomial(), method = "brglmFit")}
if(method=="svm"){model  <-e1071::svm(model.formula, data=traindata, probability=TRUE, scale=FALSE,
kernal="radial basis",gamma=0.125,  epsilon=0.125, cost=0.25 )
}  #hyperparameter after tunning: kernal="radial basis",gamma=0.125,  epsilon=0.125, cost=0.25
if(method=="randomforest"){ model<- randomForest::randomForest(model.formula, data=traindata, ntree = 500)}
if(method=="lasso"){
mod.matrix <- model.matrix(fmla,  traindata)
cv.glm.out <- cv.glmnet(x=mod.matrix, y= dep_var_0or1,
weights = NULL, offset = NULL, lambda = NULL,
type.measure = "auc",
nfolds = 10, foldid = NULL, alignment = c("lambda","fraction"), grouped = TRUE, keep = FALSE, parallel = FALSE,
gamma = c(0, 0.25, 0.5, 0.75, 1), relax = FALSE, trace.it = 0)
model <- glmnet(x=mod.matrix, y= dep_var_0or1, family = "binomial", alpha = 1, lambda = cv.glm.out$lambda.1se)
}
}
# below: prepare testdata--------------------
dep_var <- x$dep_var
ind_var <- x$ind_var
testdata_rf <- testdata
if(is.null(testdata)){testdata= x$data}
#testdata = testdata[,c(ind_var, dep_var)]
# above: prepare testdata-------------------------------------------
#dep_varname <- as.name(dep_var)
dep_var_level2 <- levels(x$data[,dep_var])[[2]]
dep_var_0or1 <-  ifelse(testdata[,dep_var] == dep_var_level2,1,0 )
#data1<-mutate(data1, dep_var_0 = dep_var_0or1)
if(method=="glm"){
if(logit){ predicted_pro_2 <- predict(model,newdata= testdata, type = "link")
}else{predicted_pro_2 <- predict(model,newdata= testdata, type = "response")}
}
if(method=="svm"){
predicted_svm <- predict(model, newdata = testdata, probability=T)
predicted_svm <- attr(predicted_svm, "probabilities")[,2]
predicted_pro_2 <- predicted_svm
}
if(method=="randomforest"){
if(is.null(testdata_rf)){
if(OOB){
message(paste("out-of-bag auc"))
predicted_rf <- predict(model, type="prob")
}else{
message(paste("not out-of-bag but original auc"))
predicted_rf <- predict(model, newdata= x$data,
type="prob")
}
}else{
message(paste("not out-of-bag but original auc"))
predicted_rf <- predict(model, newdata= testdata_rf,
type="prob")
}
predicted_rf <- as.numeric(predicted_rf[,2])
predicted_pro_2 <- predicted_rf
}
if(method=="lasso"){
mod.matrix <-  model.matrix(fmla,  testdata)
predicted_lasso <- predict(model, newx= mod.matrix ,type="response",s=model$lambda)
predicted_lasso <- as.numeric(predicted_lasso)
predicted_pro_2 <- predicted_lasso
}
if(method=="knn"){model <- kknn::kknn(x$model$model.formula, train = x$data, test = testdata, k=k)
predicted_pro_2 <-  model$prob[,2]
}
predicted <- data.frame( Predicted = predicted_pro_2, Observed = dep_var_0or1)
class(predicted) <- c("mypaper", "data.frame")
return(predicted)
}
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="glm")
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="lasso")
model1.s$model$lasso.glm
debugonce()
debugonce(predict.mypaper)
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="lasso")
library(stats)
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="lasso")
model.matrix()
test <- model.matrix(firstyrbully2~ bis1_total, data = model1.s$data)
test <- model.matrix(firstyrbully2~ bis1_standardized, data = model1.s$data)
debugonce(predict.mypaper)
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="lasso")
fmla
dim(traindata)
colnames(traindata)
mod.matrix <- model.matrix(fmla,  traindata)
fmla
class(fmla)
class(traindata)
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="glm")
debugonce(predict.mypaper)
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="glm")
debugonce(predict.mypaper)
Q
c
Q
Q
debugonce(predict.mypaper)
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="glm")
debugonce(predict.mypaper)
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="glm")
model.formula
### require or.prev
predict.mypaper <- function(x,traindata=NULL,testdata= NULL, method=c("glm","svm","lasso","randomforest", "knn"), kernal="linear", OOB=T,k=25,logit=F, ...){
corrected.c <- NULL
calibration.auc <- NULL
predicted_pro_2 <- NULL
model.data <-x$model$GLM
model.formula <- model.data$formula
if(method=="lasso" ){
dep_var_level2 <- levels(x$data[,x$dep_var])[[2]]
dep_var_0or1 <-  ifelse(traindata[,x$dep_var] == dep_var_level2,1,0 )
ind_var_str <- paste(c(as.character(x$ind_var)), collapse = "+ ")
fmla <- as.formula( paste( x$dep_var,"~", ind_var_str))
}
if(is.null(traindata)){
if(method=="glm"){model <- x$model$GLM}
if(method=="svm"){model <- x$model$SVM}
if(method=="randomforest"){model <- x$model$RF}
if(method=="lasso"){model <- x$model$lasso.glm
mod.matrix <-  x$model$model.matrix
}
if(method=="knn"){model <- x$model$KNN}
}else{
if(method=="glm"){ model <- glm(model.formula, data = traindata, family = binomial() #, method = "brglmFit"
)
}
if(method=="svm"){model  <-e1071::svm(model.formula, data=traindata, probability=TRUE, scale=FALSE,
kernal="radial basis",gamma=0.125,  epsilon=0.125, cost=0.25 )
}  #hyperparameter after tunning: kernal="radial basis",gamma=0.125,  epsilon=0.125, cost=0.25
if(method=="randomforest"){ model<- randomForest::randomForest(model.formula, data=traindata, ntree = 500)}
if(method=="lasso"){
mod.matrix <- model.matrix(fmla,  traindata)
cv.glm.out <- cv.glmnet(x=mod.matrix, y= dep_var_0or1,
weights = NULL, offset = NULL, lambda = NULL,
type.measure = "auc",
nfolds = 10, foldid = NULL, alignment = c("lambda","fraction"), grouped = TRUE, keep = FALSE, parallel = FALSE,
gamma = c(0, 0.25, 0.5, 0.75, 1), relax = FALSE, trace.it = 0)
model <- glmnet(x=mod.matrix, y= dep_var_0or1, family = "binomial", alpha = 1, lambda = cv.glm.out$lambda.1se)
}
}
# below: prepare testdata--------------------
dep_var <- x$dep_var
ind_var <- x$ind_var
testdata_rf <- testdata
if(is.null(testdata)){testdata= x$data}
#testdata = testdata[,c(ind_var, dep_var)]
# above: prepare testdata-------------------------------------------
#dep_varname <- as.name(dep_var)
dep_var_level2 <- levels(x$data[,dep_var])[[2]]
dep_var_0or1 <-  ifelse(testdata[,dep_var] == dep_var_level2,1,0 )
#data1<-mutate(data1, dep_var_0 = dep_var_0or1)
if(method=="glm"){
if(logit){ predicted_pro_2 <- predict(model,newdata= testdata, type = "link")
}else{predicted_pro_2 <- predict(model,newdata= testdata, type = "response")}
}
if(method=="svm"){
predicted_svm <- predict(model, newdata = testdata, probability=T)
predicted_svm <- attr(predicted_svm, "probabilities")[,2]
predicted_pro_2 <- predicted_svm
}
if(method=="randomforest"){
if(is.null(testdata_rf)){
if(OOB){
message(paste("out-of-bag auc"))
predicted_rf <- predict(model, type="prob")
}else{
message(paste("not out-of-bag but original auc"))
predicted_rf <- predict(model, newdata= x$data,
type="prob")
}
}else{
message(paste("not out-of-bag but original auc"))
predicted_rf <- predict(model, newdata= testdata_rf,
type="prob")
}
predicted_rf <- as.numeric(predicted_rf[,2])
predicted_pro_2 <- predicted_rf
}
if(method=="lasso"){
mod.matrix <-  model.matrix(fmla,  testdata)
predicted_lasso <- predict(model, newx= mod.matrix ,type="response",s=model$lambda)
predicted_lasso <- as.numeric(predicted_lasso)
predicted_pro_2 <- predicted_lasso
}
if(method=="knn"){model <- kknn::kknn(x$model$model.formula, train = x$data, test = testdata, k=k)
predicted_pro_2 <-  model$prob[,2]
}
predicted <- data.frame( Predicted = predicted_pro_2, Observed = dep_var_0or1)
class(predicted) <- c("mypaper", "data.frame")
return(predicted)
}
pred <- predict.mypaper(model1.s, traindata=model1.s$data, method="glm")
model.test <- glm(firstyrbully2~bis1_standardized, data=model1.s$data)
model.test <- glm(formula= firstyrbully2~bis1_standardized, data=model1.s$data)
model.test <- glm(formula= firstyrbully2~q3_a+bis1_standardized, data=model1.s$data)
model.test <- glm(formula= firstyrbully2~ victim_3group +bis1_standardized, data=model1.s$data)
colnames(model1.s$data)
model.test <- glm(formula= firstyrbully2~ victim_3group +bis1_standardized, data=model1.s$data)
model.test <- glm(formula= firstyrbully2~ victim_3group +bis1_standardized, data=dataset)
class(dataset$victim_3group)
levels(dataset$victim_3group)
model.test <- glm(formula= firstyrbully2~ victim_3group +bis1_standardized, data=dataset, family = binomial())
contr.dummy
install.packages("kknn")
library(kknn)
install.packages("kknn")
library(kknn)
model.test <- glm(formula= firstyrbully2~ victim_3group +bis1_standardized, data=dataset, family = binomial())
meth="glm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
library(esc)
library(tidyverse)
library(brglm2)
library("rms")
library(ggpubr)
library("pROC")
library(caret)
library(mice)
library(glmnet)
library(e1071)
library(randomForest)
library(kknn)
library(mgcv)
library(rms)
library(Information)
library(kknn)
meth="glm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="lasso"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
library(glmnet)
library(glmnet)
install.packages("glmnet")
library(glmnet)
meth="lasso"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="lasso"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model1.s, traindata=model1.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="svm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model1.s, traindata=model1.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
meth="randomforest"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model1.s, traindata=model1.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0 <- dataset
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model1.s$data, method=meth, x=model1.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
data0 <- dataset
meth="glm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
library(Hmisc)
data0 <- dataset
meth="glm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
library(Hmisc)
library(lattice)
install.packages("lattice")
install.packages("lattice")
library(lattice)
data0 <- dataset
meth="glm"
cutoff=c(0.1, 0.5)
pred3 <- predict.mypaper(model3.s, traindata=model3.s$data, method=meth)
predcut <- cut2(pred3$Predicted, cutoff)
data0$predcut <- predcut
datalow <-data0%>%filter(predcut==levels(predcut)[1])
datamed <- data0%>%filter(predcut==levels(predcut)[2])
datahigh <- data0%>%filter(predcut==levels(predcut)[3])
calimed <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datamed)
calihigh <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datahigh)
calilow <- auc.mypaper(traindata = model3.s$data, method=meth, x=model3.s, testdata = datalow)
rbind(calilow, calimed, calihigh)
